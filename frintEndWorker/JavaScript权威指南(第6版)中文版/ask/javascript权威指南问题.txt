1.全局函数?
isNaN()
isFinite(),
eval(),
parseInt(),
global,
parseFloat(),
typeof,
window,
document,
geval()
2.全局属性?
undefined,nan,infinity
3.全局对象
Math,JSON
4.构造函数/包装对象?
new Date(),new RegExp(),new String()
,new Object(),new Array(),new Number()
,new Error(),new Boolean()
-----------------------------
4.原始类型?
boolean,String,Number
5.对象类型?
array,object,函数(new name()),<拥有valueOf和toString方法,键值对,delete,对象 instanceof 对象的类,字符串 in 对象  //判断对象里面存不存在该属性>
6.原始表达式
常量,直接量,关键字,变量
7.全局变量
Infinity,NaN
Number
toFixed()


第一章
1.什么是宿主环境和宿主对象?
	宿主对象:
	ECMAScript中的“宿主”当然就是我们网页的运行环境，即“操作系统”和“浏览器”。所有非本地对象都是宿主对象（host object），即由 ECMAScript 实现的宿主环境提供的对象	
	所有的BOM和DOM对象都是宿主对象。因为其对于不同的“宿主”环境所展示的内容不同。其实说白了就是，ECMAScript官方未定义的对象都属于宿主对象，因为其未定义的对象大多数是自己通过ECMAScript程序创建的对象
	宿主环境:
	JavaScript运行环境一般都由宿主环境和执行期环境共同构成。其中宿主环境是由外壳程序生成的，如Web浏览器就是一个外壳程序，它提供了 一个可控制浏览器窗口的宿主环境,宿主环境一般会创建一套公共对象系统，这套对象系统对所有脚本语言开放，并允许它们自由访问。
第二章
1.什么是超集?
	定义：如果一个集合S2中的每一个元素都在集合S1中，且集合S1中可能包含S2中没有的元素，则集合S1就是S2的一个超集，反过来，S2是S1的子集。 S1是S2的超集，若S1中一定有S2中没有的元素，则S1是S2的真超集，反过来S2是S1的真子集。
第三章
1.IEEE754标准?
IEEE二进制浮点数算术标准（IEEE 754）是20世纪80年代以来最广泛使用的浮点数运算标准，为许多CPU与浮点运算器所采用。这个标准定义了表示浮点数的格式（包括负零-0）与反常值（denormal number），一些特殊数值（（无穷（Inf）与非数值（NaN）），以及这些数值的“浮点数运算符”；它也指明了四种数值舍入规则和五种例外状况（包括例外发生的时机与处理方式）
单精确度（32位）、双精确度（64位）、延伸单精确度（43比特以上，很少使用）与延伸双精确度（79比特以上，通常以80位实现）

2.LN2和LN10是什么？
LN2:
LN2 属性就是 loge2，即 2 的自然对数，其值近似于 0.69314718055994528623
LN10：
LN10 属性就是 loge10，即 10 的自然对数，其值近似于 2.3025850929940459011。

3.特殊对象 global object 
MDN web docs 解析说在一个全局对象就是存在全局范围内的对象,全局范围的意思是不存放在函数，汉法内的,例如window object 就是global 对象

4.包装对象
原始数据类型直接使用了对象方法,其实是因为javascript对其进行了包装然后当执行完了对象方法后就对其包装进行销毁
原始数据类型有string，number,boolean,null，undifined 
包装类意思是 'hellow!lucas'.indexOf('lucas');
程序执行过程
new String('hellow!lucas').indexOf('lucas');
属性用完之后就立即销毁那个new String();

5.词法作用域
动态作用域和静态作用域
静态作用域
静态作用域又叫做词法作用域，采用词法作用域的变量叫词法变量。词法变量有一个在编译时静态确定的作用域。词法变量的作用域可以是一个函数或一段代码，该变量在这段代码区域内可见（visibility）；在这段区域以外该变量不可见（或无法访问）。词法作用域里，取变量的值时，会检查函数定义时的文本环境，捕捉函数定义时对该变量的绑定。
动态作用域
采用动态作用域的变量叫做动态变量。只要程序正在执行定义了动态变量的代码段，那么在这段时间内，该变量一直存在；代码段执行结束，该变量便消失。
第四章



第五章
1.with?
with语句的作用是将代码的作用域设置到一个特定的作用域中
2.with关键字的目的是为了简化多次编写访问同一对象的工作
问题
1.性能问题
2.语义不明，调试困难

第六章
内置对象:
array,function,date,RegExp